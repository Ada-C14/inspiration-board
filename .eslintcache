[{"/Users/Ace/ADA/Coursework/JavaScript/inspiration-board/src/index.js":"1","/Users/Ace/ADA/Coursework/JavaScript/inspiration-board/src/App.js":"2","/Users/Ace/ADA/Coursework/JavaScript/inspiration-board/src/registerServiceWorker.js":"3","/Users/Ace/ADA/Coursework/JavaScript/inspiration-board/src/components/Board.js":"4","/Users/Ace/ADA/Coursework/JavaScript/inspiration-board/src/components/Card.js":"5","/Users/Ace/ADA/Coursework/JavaScript/inspiration-board/src/components/NewCardForm.js":"6"},{"size":254,"mtime":1610221438750,"results":"7","hashOfConfig":"8"},{"size":497,"mtime":1610427756835,"results":"9","hashOfConfig":"8"},{"size":4384,"mtime":1610221438751,"results":"10","hashOfConfig":"8"},{"size":3138,"mtime":1611075457368,"results":"11","hashOfConfig":"8"},{"size":2159,"mtime":1611019977565,"results":"12","hashOfConfig":"8"},{"size":2518,"mtime":1611020317149,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1uxbltq",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"16"},"/Users/Ace/ADA/Coursework/JavaScript/inspiration-board/src/index.js",[],["29","30"],"/Users/Ace/ADA/Coursework/JavaScript/inspiration-board/src/App.js",[],"/Users/Ace/ADA/Coursework/JavaScript/inspiration-board/src/registerServiceWorker.js",[],"/Users/Ace/ADA/Coursework/JavaScript/inspiration-board/src/components/Board.js",["31","32"],"/Users/Ace/ADA/Coursework/JavaScript/inspiration-board/src/components/Card.js",["33","34"],"import React, { Component, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport emoji from 'emoji-dictionary';\n\nimport './Card.css';\n\nconst Card = (props) => {\n  // const [updateCard, setUpdateCard] = useState({\n  //   text: '',\n  //   emoji: '',\n  // });\n\n  const showEmoji = (emojiString) => {\n    return emoji.getUnicode(emojiString)\n  };\n\n  // const onUpdateFieldChange = (event) => {\n  //   const newUpdateFields = {...updateCard,};\n  //   newUpdateFields[event.target.name] = event.target.value;\n  //   setUpdateCard(newUpdateFields);\n  // };\n\n  // const onUpdateSubmit = (event) => {\n  //   event.preventDefault();\n\n  //   if (updateCard.text !=='' || updateCard.emoji !=='') {\n  //     props.onUpdateCardCallback(updateCard);\n  //     setUpdateCard({\n  //       text: '',\n  //       emoji: '',\n  //     });\n  //   } else {\n  //     props.setError('No changes made')\n  //   };\n  // };\n\n// onClick = {\n//   () => props.onUpdateCardCallback(props.id)\n// }\n\n  return (\n    <div className=\"card\">\n      <div className=\"card__content\">\n        <div className=\"card__content-text\">\n          {props.text}\n        </div>\n        <div className=\"card__content-emoji\">\n          {showEmoji(props.emoji)}\n        </div>\n        <div><button onClick={() => props.onDeleteCardCallback(props.id)}\n        className=\"card__delete\">Remove</button></div>\n        {/* <form onSubmit={onUpdateSubmit}>\n          <label>Change Message</label>\n          <input id='text' name='text' \n              onChange={onUpdateFieldChange} \n              value={updateCard.text}/>\n          <label>Change Emoji</label>\n          <input id='emoji' name='emoji'\n              onChange = {onUpdateFieldChange}\n              value = {updateCard.emoji}/>\n          <input type = 'submit'\n                value = 'Update'\n                className = \"card__delete\" />\n        </form> */}\n      </div>\n    </div>\n  )\n}\n\nCard.propTypes = {\n  id: PropTypes.number.isRequired,\n  text: PropTypes.string.isRequired,\n  emoji: PropTypes.string.isRequired,\n  onDeleteCardCallback: PropTypes.func.isRequired,\n  onUpdateCardCallback: PropTypes.func.isRequired\n};\n\nexport default Card;\n","/Users/Ace/ADA/Coursework/JavaScript/inspiration-board/src/components/NewCardForm.js",["35"],"import React, { Component, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport emoji from 'emoji-dictionary';\nimport './NewCardForm.css';\n\nconst EMOJI_LIST = [\"\", \"moneybag\", \"heart_eyes\", \"beer\", \"clap\", \"sparkling_heart\", \"heart_eyes_cat\", \"dog\", \"nail_polish\"]\n\n\nconst NewCardForm = (props) => {\n    const [formFields, setFormFields] = useState({\n        text: '',\n        emoji: '',\n    });\n\n    const onFormFieldChange = (event) => {\n        const newFormFields = {...formFields,};\n        newFormFields[event.target.name] = event.target.value;\n        setFormFields(newFormFields);\n    };\n\n    const onFormSubmit = (event) => {\n        event.preventDefault();\n\n        if (formFields.text !== \"\" || formFields.emoji !== \"\") {\n            props.onAddCardCallback(formFields);\n            setFormFields({\n                text: '',\n                emoji: '',\n            });\n        } else {\n            props.setError('Must insert text or emoji')\n        };\n    };\n\n    const selectEmoji = EMOJI_LIST.map((emojiText) => {\n        return (\n            <option value={emojiText}>\n                {emoji.getUnicode(emojiText)}\n            </option>\n        )\n    })\n\n    return (\n        <form className=\"new-card-form\" onSubmit={onFormSubmit}>\n            <div className=\"new-card-form__header\">\n                <h2>Add your INSPIRATION</h2>\n            </div>\n            <div className=\"new-card-form__form\" >\n                <label className=\"new-card-form__form-label\">Message</label>\n                <input className=\"new-card-form__form-textarea\"\n                            id='text'\n                            name='text'\n                            onChange={onFormFieldChange}\n                            value={formFields.text}\n                />\n            </div>\n            <div className='new-card-form__form'>\n                <label className='new-card-form__form-label'>Emoji</label>\n                <select className='new-card-form__form-select'\n                            id='emoji'\n                            name='emoji'\n                            onChange={onFormFieldChange}\n                            value={formFields.emoji}\n                            >\n                                {selectEmoji}\n                </select>\n            </div>\n            <input type='submit' value='Post it' className=\"new-card-form__form-button\" />\n        </form>\n    )\n};\n\nNewCardForm.propTypes = {\n    onAddCardCallback: PropTypes.func.isRequired,\n}\n\nexport default NewCardForm;",{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","severity":1,"message":"41","line":8,"column":8,"nodeType":"42","messageId":"43","endLine":8,"endColumn":17},{"ruleId":"44","severity":1,"message":"45","line":34,"column":5,"nodeType":"46","endLine":34,"endColumn":7,"suggestions":"47"},{"ruleId":"40","severity":1,"message":"48","line":1,"column":17,"nodeType":"42","messageId":"43","endLine":1,"endColumn":26},{"ruleId":"40","severity":1,"message":"49","line":1,"column":28,"nodeType":"42","messageId":"43","endLine":1,"endColumn":36},{"ruleId":"40","severity":1,"message":"48","line":1,"column":17,"nodeType":"42","messageId":"43","endLine":1,"endColumn":26},"no-native-reassign",["50"],"no-negated-in-lhs",["51"],"no-unused-vars","'CARD_DATA' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'errorMessage' and 'getCardsURLEndpoint'. Either include them or remove the dependency array.","ArrayExpression",["52"],"'Component' is defined but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"53","fix":"54"},"Update the dependencies array to be: [errorMessage, getCardsURLEndpoint]",{"range":"55","text":"56"},[956,958],"[errorMessage, getCardsURLEndpoint]"]