[{"/home/christabel/Documents/Ada/inspiration-board/src/index.js":"1","/home/christabel/Documents/Ada/inspiration-board/src/App.js":"2","/home/christabel/Documents/Ada/inspiration-board/src/registerServiceWorker.js":"3","/home/christabel/Documents/Ada/inspiration-board/src/components/Board.js":"4","/home/christabel/Documents/Ada/inspiration-board/src/components/Card.js":"5","/home/christabel/Documents/Ada/inspiration-board/src/components/NewCardForm.js":"6"},{"size":254,"mtime":1610070791300,"results":"7","hashOfConfig":"8"},{"size":527,"mtime":1610330425763,"results":"9","hashOfConfig":"8"},{"size":4384,"mtime":1610070791300,"results":"10","hashOfConfig":"8"},{"size":2359,"mtime":1610330425763,"results":"11","hashOfConfig":"8"},{"size":684,"mtime":1610328838728,"results":"12","hashOfConfig":"8"},{"size":243,"mtime":1610070791300,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"abi17",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"16"},"/home/christabel/Documents/Ada/inspiration-board/src/index.js",[],["29","30"],"/home/christabel/Documents/Ada/inspiration-board/src/App.js",[],"/home/christabel/Documents/Ada/inspiration-board/src/registerServiceWorker.js",[],"/home/christabel/Documents/Ada/inspiration-board/src/components/Board.js",["31","32","33","34","35"],"import React,{ useState, useEffect }  from 'react';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\n\nimport './Board.css';\nimport Card from './Card';\nimport NewCardForm from './NewCardForm';\nimport CARD_DATA from '../data/card-data.json';\n\nconst Board = ({url, boardName, deleteCardCallback}) => {\n  const [cards, setCards] = useState([]);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [nextID, setNextId] = useState(-1);\n\n  const incrementID = () => {\n    const nextId = cards.reduce((accumulator, card) => {\n      return Math.max(accumulator, card.id);\n    }, 0) + 1;\n    setNextId(nextID);\n  }\n\n  //load board\n  useEffect(() => {\n    axios.get(`${url}/boards/${boardName}/cards`)\n      .then((response) => {\n        const apiCards = response.data.map((apiCard) => { \n          return {\n            id: apiCard['card']['id'], \n            emoji: apiCard['card']['emoji'],\n            text: apiCard['card']['text'],\n          }\n        });\n\n        console.log(apiCards)\n        if (apiCards.length === 0) {\n          setCards(CARD_DATA['cards'])\n        } else {\n          setCards(apiCards);\n        }\n      })\n      .catch((error) => {\n        setErrorMessage(error.message);\n        console.log(error.message)\n      });\n  }, []);\n\n\n  const deleteCard = (cardId) => {\n    const revisedCards = cards.filter ((card) => { return card.id !== cardId });\n    axios.delete(`${url}/cards/${cardId}`)\n      .then((response) => {\n        console.log(`Card ${cardId} was successfully deleted.`)\n      })\n      .catch((error) => {\n        setErrorMessage(error.message);\n        console.log(`An error occurred and card ${cardId} was not deleted.`)\n        console.log(error.message)\n      })\n    setCards(revisedCards);\n  }\n\n  const loadBoard = () => {\n    return cards.map((card) => {\n      // if (card.id > nextID) {\n      //   incrementID();\n      // }\n\n      // if (!card.id) {\n      //   card.id = nextID;\n      //   setNextId(nextID + 1);\n      // }\n\n      return <Card text={card.text} emojiName={card.emoji} id={card.id} key={card.id || nextID} deleteCardCallback={deleteCard} />\n    })\n  }\n\n\n  return (\n    <div>\n      {loadBoard()}\n    </div>\n  )\n};\n\nBoard.propTypes = {\n  url: PropTypes.string.isRequired,\n  boardName: PropTypes.string.isRequired,\n  deleteCardCallback: PropTypes.func.isRequired,\n};\n\nexport default Board;\n","/home/christabel/Documents/Ada/inspiration-board/src/components/Card.js",["36","37","38"],"/home/christabel/Documents/Ada/inspiration-board/src/components/NewCardForm.js",["39","40","41","42","43"],"import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport emoji from 'emoji-dictionary';\nimport './NewCardForm.css';\n\nconst EMOJI_LIST = [\"\", \"heart_eyes\", \"beer\", \"clap\", \"sparkling_heart\", \"heart_eyes_cat\", \"dog\"]\n",{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":7,"column":8,"nodeType":"50","messageId":"51","endLine":7,"endColumn":19},{"ruleId":"48","severity":1,"message":"52","line":12,"column":10,"nodeType":"50","messageId":"51","endLine":12,"endColumn":22},{"ruleId":"48","severity":1,"message":"53","line":15,"column":9,"nodeType":"50","messageId":"51","endLine":15,"endColumn":20},{"ruleId":"48","severity":1,"message":"54","line":16,"column":11,"nodeType":"50","messageId":"51","endLine":16,"endColumn":17},{"ruleId":"55","severity":1,"message":"56","line":45,"column":6,"nodeType":"57","endLine":45,"endColumn":8,"suggestions":"58"},{"ruleId":"48","severity":1,"message":"59","line":1,"column":17,"nodeType":"50","messageId":"51","endLine":1,"endColumn":25},{"ruleId":"48","severity":1,"message":"60","line":1,"column":27,"nodeType":"50","messageId":"51","endLine":1,"endColumn":36},{"ruleId":"48","severity":1,"message":"61","line":1,"column":38,"nodeType":"50","messageId":"51","endLine":1,"endColumn":47},{"ruleId":"48","severity":1,"message":"62","line":1,"column":8,"nodeType":"50","messageId":"51","endLine":1,"endColumn":13},{"ruleId":"48","severity":1,"message":"60","line":1,"column":17,"nodeType":"50","messageId":"51","endLine":1,"endColumn":26},{"ruleId":"48","severity":1,"message":"63","line":2,"column":8,"nodeType":"50","messageId":"51","endLine":2,"endColumn":17},{"ruleId":"48","severity":1,"message":"64","line":3,"column":8,"nodeType":"50","messageId":"51","endLine":3,"endColumn":13},{"ruleId":"48","severity":1,"message":"65","line":6,"column":7,"nodeType":"50","messageId":"51","endLine":6,"endColumn":17},"no-native-reassign",["66"],"no-negated-in-lhs",["67"],"no-unused-vars","'NewCardForm' is defined but never used.","Identifier","unusedVar","'errorMessage' is assigned a value but never used.","'incrementID' is assigned a value but never used.","'nextId' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'boardName' and 'url'. Either include them or remove the dependency array.","ArrayExpression",["68"],"'useState' is defined but never used.","'Component' is defined but never used.","'useEffect' is defined but never used.","'React' is defined but never used.","'PropTypes' is defined but never used.","'emoji' is defined but never used.","'EMOJI_LIST' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"69","fix":"70"},"Update the dependencies array to be: [boardName, url]",{"range":"71","text":"72"},[1256,1258],"[boardName, url]"]