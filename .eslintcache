[{"/Users/Ace/ADA/Coursework/JavaScript/inspiration-board/src/index.js":"1","/Users/Ace/ADA/Coursework/JavaScript/inspiration-board/src/App.js":"2","/Users/Ace/ADA/Coursework/JavaScript/inspiration-board/src/registerServiceWorker.js":"3","/Users/Ace/ADA/Coursework/JavaScript/inspiration-board/src/components/Board.js":"4","/Users/Ace/ADA/Coursework/JavaScript/inspiration-board/src/components/Card.js":"5","/Users/Ace/ADA/Coursework/JavaScript/inspiration-board/src/components/NewCardForm.js":"6"},{"size":254,"mtime":1610221438750,"results":"7","hashOfConfig":"8"},{"size":497,"mtime":1610427756835,"results":"9","hashOfConfig":"8"},{"size":4384,"mtime":1610221438751,"results":"10","hashOfConfig":"8"},{"size":2857,"mtime":1611077247513,"results":"11","hashOfConfig":"8"},{"size":2158,"mtime":1611077274951,"results":"12","hashOfConfig":"8"},{"size":2518,"mtime":1611020317149,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1uxbltq",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"16"},"/Users/Ace/ADA/Coursework/JavaScript/inspiration-board/src/index.js",[],["28","29"],"/Users/Ace/ADA/Coursework/JavaScript/inspiration-board/src/App.js",[],"/Users/Ace/ADA/Coursework/JavaScript/inspiration-board/src/registerServiceWorker.js",[],"/Users/Ace/ADA/Coursework/JavaScript/inspiration-board/src/components/Board.js",["30"],"/Users/Ace/ADA/Coursework/JavaScript/inspiration-board/src/components/Card.js",["31","32"],"/Users/Ace/ADA/Coursework/JavaScript/inspiration-board/src/components/NewCardForm.js",["33"],"import React, { Component, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport emoji from 'emoji-dictionary';\nimport './NewCardForm.css';\n\nconst EMOJI_LIST = [\"\", \"moneybag\", \"heart_eyes\", \"beer\", \"clap\", \"sparkling_heart\", \"heart_eyes_cat\", \"dog\", \"nail_polish\"]\n\n\nconst NewCardForm = (props) => {\n    const [formFields, setFormFields] = useState({\n        text: '',\n        emoji: '',\n    });\n\n    const onFormFieldChange = (event) => {\n        const newFormFields = {...formFields,};\n        newFormFields[event.target.name] = event.target.value;\n        setFormFields(newFormFields);\n    };\n\n    const onFormSubmit = (event) => {\n        event.preventDefault();\n\n        if (formFields.text !== \"\" || formFields.emoji !== \"\") {\n            props.onAddCardCallback(formFields);\n            setFormFields({\n                text: '',\n                emoji: '',\n            });\n        } else {\n            props.setError('Must insert text or emoji')\n        };\n    };\n\n    const selectEmoji = EMOJI_LIST.map((emojiText) => {\n        return (\n            <option value={emojiText}>\n                {emoji.getUnicode(emojiText)}\n            </option>\n        )\n    })\n\n    return (\n        <form className=\"new-card-form\" onSubmit={onFormSubmit}>\n            <div className=\"new-card-form__header\">\n                <h2>Add your INSPIRATION</h2>\n            </div>\n            <div className=\"new-card-form__form\" >\n                <label className=\"new-card-form__form-label\">Message</label>\n                <input className=\"new-card-form__form-textarea\"\n                            id='text'\n                            name='text'\n                            onChange={onFormFieldChange}\n                            value={formFields.text}\n                />\n            </div>\n            <div className='new-card-form__form'>\n                <label className='new-card-form__form-label'>Emoji</label>\n                <select className='new-card-form__form-select'\n                            id='emoji'\n                            name='emoji'\n                            onChange={onFormFieldChange}\n                            value={formFields.emoji}\n                            >\n                                {selectEmoji}\n                </select>\n            </div>\n            <input type='submit' value='Post it' className=\"new-card-form__form-button\" />\n        </form>\n    )\n};\n\nNewCardForm.propTypes = {\n    onAddCardCallback: PropTypes.func.isRequired,\n}\n\nexport default NewCardForm;",{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","severity":1,"message":"39","line":34,"column":5,"nodeType":"40","endLine":34,"endColumn":7,"suggestions":"41"},{"ruleId":"42","severity":1,"message":"43","line":1,"column":17,"nodeType":"44","messageId":"45","endLine":1,"endColumn":26},{"ruleId":"42","severity":1,"message":"46","line":1,"column":28,"nodeType":"44","messageId":"45","endLine":1,"endColumn":36},{"ruleId":"42","severity":1,"message":"43","line":1,"column":17,"nodeType":"44","messageId":"45","endLine":1,"endColumn":26},"no-native-reassign",["47"],"no-negated-in-lhs",["48"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'errorMessage' and 'getCardsURLEndpoint'. Either include them or remove the dependency array.","ArrayExpression",["49"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"50","fix":"51"},"Update the dependencies array to be: [errorMessage, getCardsURLEndpoint]",{"range":"52","text":"53"},[909,911],"[errorMessage, getCardsURLEndpoint]"]