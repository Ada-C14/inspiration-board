[{"/home/christabel/Documents/Ada/inspiration-board/src/index.js":"1","/home/christabel/Documents/Ada/inspiration-board/src/App.js":"2","/home/christabel/Documents/Ada/inspiration-board/src/registerServiceWorker.js":"3","/home/christabel/Documents/Ada/inspiration-board/src/components/Board.js":"4","/home/christabel/Documents/Ada/inspiration-board/src/components/Card.js":"5","/home/christabel/Documents/Ada/inspiration-board/src/components/NewCardForm.js":"6"},{"size":254,"mtime":1610070791300,"results":"7","hashOfConfig":"8"},{"size":579,"mtime":1610414127509,"results":"9","hashOfConfig":"8"},{"size":4384,"mtime":1610070791300,"results":"10","hashOfConfig":"8"},{"size":2917,"mtime":1610338990077,"results":"11","hashOfConfig":"8"},{"size":787,"mtime":1610412918994,"results":"12","hashOfConfig":"8"},{"size":1668,"mtime":1610413963854,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"abi17",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/christabel/Documents/Ada/inspiration-board/src/index.js",[],["28","29"],"/home/christabel/Documents/Ada/inspiration-board/src/App.js",[],"/home/christabel/Documents/Ada/inspiration-board/src/registerServiceWorker.js",[],"/home/christabel/Documents/Ada/inspiration-board/src/components/Board.js",["30","31"],"/* eslint-disable no-lone-blocks */\nimport React,{ useState, useEffect }  from 'react';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\n\nimport './Board.css';\nimport Card from './Card';\nimport NewCardForm from './NewCardForm';\nimport CARD_DATA from '../data/card-data.json';\n\nconst Board = ({url, boardName}) => {\n  const [cards, setCards] = useState([]);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [nextId, setNextId] = useState(-1);\n\n  const incrementId = () => {\n    const id = cards.reduce((accumulator, card) => {\n      return Math.max(accumulator, card.id);\n    }, 0) + 1;\n    setNextId(id);\n    return id;\n  }\n\n  //load board\n  useEffect(() => {\n    axios.get(`${url}/boards/${boardName}/cards`)\n      .then((response) => {\n        const apiCards = response.data.map((apiCard) => { \n          return {\n            id: apiCard['card']['id'], \n            emoji: apiCard['card']['emoji'],\n            text: apiCard['card']['text'],\n          }\n        });\n\n        if (apiCards.length === 0) {\n          setCards(CARD_DATA['cards'])\n        } else {\n          setCards(apiCards);\n        }\n\n        incrementId();\n        console.log(nextId)\n      })\n      .catch((error) => {\n        const message = `An error occurred and board ${boardName} did not load. ${error.message}`\n        setErrorMessage(message);\n        console.log(message)\n      });\n  }, []);\n\n\n  const deleteCardCallback = (cardId) => {\n    const revisedCards = cards.filter ((card) => { return (card.id !== cardId)});\n\n    axios.delete(`${url}/cards/${cardId}`)\n      .then((response) => {\n        console.log(`Card ${cardId} was successfully deleted.`)\n      })\n      .catch((error) => {\n        const message = `An error occurred and card ${cardId} was not deleted. ${error.message}`\n        setErrorMessage(message);\n        console.log(message)\n      })\n    setCards(revisedCards);\n  }\n\n  const addNewCardCallback = (event,newCard) => {\n    event.preventDefault();\n    const apiCard = {\n      text: newCard.text, emoji: newCard.emojiName}\n\n    axios.post(`${url}/boards/${boardName}/cards`, apiCard)\n      .then((response) => {\n        setCards([...cards, newCard]);\n        incrementId();\n        setErrorMessage('');\n      })\n      .catch((error)=>{\n        const message = `An error occurred and card was not added to board ${boardName}. ${error.message}`\n        setErrorMessage(message);\n        console.log(message)\n      })\n\n  }\n\n  const loadBoard = () => {\n    return cards.map((card) => {\n      return <Card text={card.text} emojiName={card.emoji} id={card.id} key={card.text} deleteCard={deleteCardCallback} />\n    })\n  }\n\n  return (\n    <div className='board'>\n      <NewCardForm nextId={nextId} addNewCard={addNewCardCallback} />\n      {loadBoard()}\n    </div>\n  )\n};\n\nBoard.propTypes = {\n  url: PropTypes.string.isRequired,\n  boardName: PropTypes.string.isRequired,\n};\n\nexport default Board;\n","/home/christabel/Documents/Ada/inspiration-board/src/components/Card.js",[],"/home/christabel/Documents/Ada/inspiration-board/src/components/NewCardForm.js",["32"],{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","severity":1,"message":"38","line":13,"column":10,"nodeType":"39","messageId":"40","endLine":13,"endColumn":22},{"ruleId":"41","severity":1,"message":"42","line":50,"column":6,"nodeType":"43","endLine":50,"endColumn":8,"suggestions":"44"},{"ruleId":"37","severity":1,"message":"45","line":1,"column":17,"nodeType":"39","messageId":"40","endLine":1,"endColumn":26},"no-native-reassign",["46"],"no-negated-in-lhs",["47"],"no-unused-vars","'errorMessage' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'boardName', 'incrementId', 'nextId', and 'url'. Either include them or remove the dependency array.","ArrayExpression",["48"],"'Component' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"49","fix":"50"},"Update the dependencies array to be: [boardName, incrementId, nextId, url]",{"range":"51","text":"52"},[1394,1396],"[boardName, incrementId, nextId, url]"]