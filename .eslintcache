[{"/home/christabel/Documents/Ada/inspiration-board/src/index.js":"1","/home/christabel/Documents/Ada/inspiration-board/src/App.js":"2","/home/christabel/Documents/Ada/inspiration-board/src/registerServiceWorker.js":"3","/home/christabel/Documents/Ada/inspiration-board/src/components/Board.js":"4","/home/christabel/Documents/Ada/inspiration-board/src/components/Card.js":"5","/home/christabel/Documents/Ada/inspiration-board/src/components/NewCardForm.js":"6"},{"size":254,"mtime":1610070791300,"results":"7","hashOfConfig":"8"},{"size":579,"mtime":1610503484270,"results":"9","hashOfConfig":"8"},{"size":4384,"mtime":1610070791300,"results":"10","hashOfConfig":"8"},{"size":3031,"mtime":1610503476114,"results":"11","hashOfConfig":"8"},{"size":787,"mtime":1610412918994,"results":"12","hashOfConfig":"8"},{"size":1668,"mtime":1610413963854,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"abi17",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},"/home/christabel/Documents/Ada/inspiration-board/src/index.js",[],["28","29"],"/home/christabel/Documents/Ada/inspiration-board/src/App.js",[],"/home/christabel/Documents/Ada/inspiration-board/src/registerServiceWorker.js",[],"/home/christabel/Documents/Ada/inspiration-board/src/components/Board.js",["30","31"],"/home/christabel/Documents/Ada/inspiration-board/src/components/Card.js",[],"/home/christabel/Documents/Ada/inspiration-board/src/components/NewCardForm.js",["32"],"import React, { Component, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport emoji from 'emoji-dictionary';\nimport './NewCardForm.css';\n\nconst EMOJI_LIST = [\"\", \"heart_eyes\", \"beer\", \"clap\", \"sparkling_heart\", \"heart_eyes_cat\", \"dog\"]\n\nconst NewCardForm = (props) => {\n  const [formFields, setFormFields] = useState({\n    id: -1,\n    text: '',\n    emojiName: '',\n  })\n\n  const onInputChange = (event) => {\n    const newFormFields = {...formFields, id: props.nextId, [event.target.name]: event.target.value} \n    setFormFields(newFormFields);\n\n    console.log(newFormFields);\n  }\n\n  return(\n    <div className='new-card-form'>\n      <h3 className='new-card-form__header'>Add a new sticky note to the Inspiration Board</h3>\n      <form className='new-card-form__form'>\n        <input \n          className='new-card-form__form-textarea' \n          placeholder='Enter an inspiring message...' \n          name='text' \n          type='text' \n          value={formFields.text}\n          onChange={onInputChange} />\n        \n        <select name='emojiName' onChange={onInputChange} id='emoji'>\n          {\n            EMOJI_LIST.map((emojiSelection) => {\n              return (\n                <option value={emojiSelection} >{emoji.getUnicode(emojiSelection)}</option>\n              )\n            })\n          }\n\n        </select>\n        <input className='new-card-form__form-button' value='Add Sticky' onClick={(event) => {props.addNewCard(event, formFields)}} type='submit' />\n\n      </form>\n    </div>\n  )\n}\n\nNewCardForm.propTypes = {\n nextId: PropTypes.number.isRequired,\n addNewCardCallback: PropTypes.func.isRequired,\n}\n\nexport default NewCardForm;\n",{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","severity":1,"message":"38","line":13,"column":10,"nodeType":"39","messageId":"40","endLine":13,"endColumn":22},{"ruleId":"41","severity":1,"message":"42","line":50,"column":6,"nodeType":"43","endLine":50,"endColumn":8,"suggestions":"44"},{"ruleId":"37","severity":1,"message":"45","line":1,"column":17,"nodeType":"39","messageId":"40","endLine":1,"endColumn":26},"no-native-reassign",["46"],"no-negated-in-lhs",["47"],"no-unused-vars","'errorMessage' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'boardName', 'incrementId', 'nextId', and 'url'. Either include them or remove the dependency array.","ArrayExpression",["48"],"'Component' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"49","fix":"50"},"Update the dependencies array to be: [boardName, incrementId, nextId, url]",{"range":"51","text":"52"},[1394,1396],"[boardName, incrementId, nextId, url]"]