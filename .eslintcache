[{"/Users/humam.noor/code/projects/inspiration-board/src/index.js":"1","/Users/humam.noor/code/projects/inspiration-board/src/registerServiceWorker.js":"2","/Users/humam.noor/code/projects/inspiration-board/src/App.js":"3","/Users/humam.noor/code/projects/inspiration-board/src/components/Board.js":"4","/Users/humam.noor/code/projects/inspiration-board/src/components/NewCardForm.js":"5","/Users/humam.noor/code/projects/inspiration-board/src/components/Card.js":"6"},{"size":254,"mtime":1610429551870,"results":"7","hashOfConfig":"8"},{"size":4384,"mtime":1610429551872,"results":"9","hashOfConfig":"8"},{"size":431,"mtime":1610846405819,"results":"10","hashOfConfig":"8"},{"size":2063,"mtime":1610846204340,"results":"11","hashOfConfig":"8"},{"size":1879,"mtime":1610832948372,"results":"12","hashOfConfig":"8"},{"size":799,"mtime":1610830826490,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"7677dd",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"16"},"/Users/humam.noor/code/projects/inspiration-board/src/index.js",[],["29","30"],"/Users/humam.noor/code/projects/inspiration-board/src/registerServiceWorker.js",[],"/Users/humam.noor/code/projects/inspiration-board/src/App.js",[],"/Users/humam.noor/code/projects/inspiration-board/src/components/Board.js",["31","32","33"],"/Users/humam.noor/code/projects/inspiration-board/src/components/NewCardForm.js",["34","35"],"import React, { Component, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport emoji from 'emoji-dictionary';\nimport './NewCardForm.css';\n\nconst EMOJI_LIST = [\"\", \"heart_eyes\", \"coffee\", \"clap\", \"sparkling_heart\", \"heart_eyes_cat\", \"dog\"]\n\nconst NewCard = (props) => {\n    const [formFields, setFormFields] = useState({\n        test: '',\n        emoji: ''\n    });\n\n    const onFormChange = (event) => {\n        const fieldName = event.target.name;\n        const newValue = event.target.value;\n\n        const newFormData = { ...formFields}\n\n        newFormData[fieldName] = newValue;\n        setFormFields(newFormData);\n    }\n\n    const onSubmit = (event) => {\n        event.preventDefault()\n        props.onAddCard(formFields)\n\n        setFormFields({\n            test: '',\n            emoji: ''\n        })\n    }\n\n    const emojies = EMOJI_LIST.map((symbol,i)=>{\n        return <option key={i} value={symbol}>{emoji.getUnicode(symbol)}</option>\n    })\n\n    return(\n        <div className=\"new-card-form\">\n        <h3 className=\"new-card-form__header\">Add Card</h3>\n        <form className=\"new-card-form__form\" onSubmit={onSubmit}>\n            <label className=\"new-card-form__form-label\" htmlFor=\"text\">Note</label>\n            <textarea className=\"new-card-form__form-textarea\"\n                onChange={onFormChange}\n                name=\"text\"\n                value={formFields.text}\n            />\n            <label className=\"new-card-form__form-label\" htmlFor=\"emoji\">Emoji</label>\n            <select className=\"new-card-form__form-select\"\n                onChange={onFormChange}\n                value={formFields.emoji}\n                name=\"emoji\" >\n                {emojies}\n            </select>\n                <input type=\"submit\" value=\"Add Card\" className=\"new-card-form__form-button\" />\n        </form>\n    </div>\n    )\n}\n\nexport default NewCard","/Users/humam.noor/code/projects/inspiration-board/src/components/Card.js",["36"],"import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport emoji from 'emoji-dictionary';\n\nimport './Card.css';\n\nconst Card = (props) => {\n  return (\n    <div className=\"card\">\n      <div className=\"card__content\">\n        {props.id}\n        <p className=\"card__content-text\">\n          {/* {props.text? props.text : ''} */}\n          {props.text || ''}\n        </p>\n        <p className=\"card__content-emoji\">{props.emoji ? emoji.getUnicode(props.emoji) : ''}\n        </p>\n        <button className=\"card__delete\" onClick={() => props.onDelete(props.id)}>delete</button>\n      </div>\n    </div>\n  )\n}\n\nCard.propTypes = {\n  text: PropTypes.string,\n  emoji: PropTypes.string,\n  id: PropTypes.number.isRequired,\n  onDelete: PropTypes.func.isRequired\n};\n\nexport default Card;\n",{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":8,"column":8,"nodeType":"43","messageId":"44","endLine":8,"endColumn":17},{"ruleId":"41","severity":1,"message":"45","line":9,"column":8,"nodeType":"43","messageId":"44","endLine":9,"endColumn":15},{"ruleId":"46","severity":1,"message":"47","line":25,"column":6,"nodeType":"48","endLine":25,"endColumn":8,"suggestions":"49"},{"ruleId":"41","severity":1,"message":"50","line":1,"column":17,"nodeType":"43","messageId":"44","endLine":1,"endColumn":26},{"ruleId":"41","severity":1,"message":"51","line":2,"column":8,"nodeType":"43","messageId":"44","endLine":2,"endColumn":17},{"ruleId":"41","severity":1,"message":"50","line":1,"column":17,"nodeType":"43","messageId":"44","endLine":1,"endColumn":26},"no-native-reassign",["52"],"no-negated-in-lhs",["53"],"no-unused-vars","'CARD_DATA' is defined but never used.","Identifier","unusedVar","'newCard' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'props.boardName' and 'props.url'. Either include them or remove the dependency array.","ArrayExpression",["54"],"'Component' is defined but never used.","'PropTypes' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"55","fix":"56"},"Update the dependencies array to be: [props.boardName, props.url]",{"range":"57","text":"58"},[718,720],"[props.boardName, props.url]"]