[{"/Users/kgossaye/ada/inspiration-board/src/index.js":"1","/Users/kgossaye/ada/inspiration-board/src/App.js":"2","/Users/kgossaye/ada/inspiration-board/src/registerServiceWorker.js":"3","/Users/kgossaye/ada/inspiration-board/src/components/Board.js":"4","/Users/kgossaye/ada/inspiration-board/src/components/Card.js":"5","/Users/kgossaye/ada/inspiration-board/src/components/NewCardForm.js":"6"},{"size":254,"mtime":1609987858318,"results":"7","hashOfConfig":"8"},{"size":440,"mtime":1611004641175,"results":"9","hashOfConfig":"8"},{"size":4384,"mtime":1609987858318,"results":"10","hashOfConfig":"8"},{"size":1738,"mtime":1611004626866,"results":"11","hashOfConfig":"8"},{"size":815,"mtime":1610937721126,"results":"12","hashOfConfig":"8"},{"size":2109,"mtime":1611004980395,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"rs3dfc",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"23"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/kgossaye/ada/inspiration-board/src/index.js",[],"/Users/kgossaye/ada/inspiration-board/src/App.js",[],"/Users/kgossaye/ada/inspiration-board/src/registerServiceWorker.js",[],"/Users/kgossaye/ada/inspiration-board/src/components/Board.js",["29","30","31"],"import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\n\nimport './Board.css';\nimport Card from './Card';\nimport NewCardForm from './NewCardForm';\n\nconst Board = (props) => {\n\n  const [cards, setCards] = useState([])\n  const [errorMessage, setErrorMessage] = useState(null)\n  const CARD_URL = 'https://inspiration-board.herokuapp.com/cards/'\n\n  useEffect(() => {\n    axios.get(props.url)\n    .then((response) => {\n      const allCards = response.data\n      setCards(allCards)\n    })\n    .catch((error) => {\n      setErrorMessage(error.message);\n    });\n  }, []);\n\n  const addCard = (card) => {\n    axios.post(props.url,card)\n      .then((response) => {\n        const updatedCards = [...cards, response.data];\n        setCards(updatedCards);\n        setErrorMessage('')\n      })\n      .catch((error) => {\n        setErrorMessage(error.message)\n      });\n  };\n\n  const deleteCard = (cardId) => {\n    const newCards = cards.filter((card) => {\n      return card.card.id !== cardId\n    });\n\n    if (newCards.length < cards.length) {\n      axios.delete(`${CARD_URL}${cardId}`)\n      .then((response) => {setErrorMessage(`Card ${cardId} successfully deleted!`);})\n      .catch((error) => {setErrorMessage(`Unable to delete Card ${cardId}`);})\n\n    setCards(newCards);\n    }\n  };\n\n  const cardList = cards.map((card) => {\n    return (\n      <Card key={card.card.id} card={card.card} deleteCallback={deleteCard} />\n    )\n  });\n\n  return (\n    <div className='board'>\n      <div>\n      { cardList }\n      </div>\n      <NewCardForm addCardCallback={addCard}/>\n    </div>\n  )\n};\nBoard.propTypes = {\n  url: PropTypes.string.isRequired,\n  boardName: PropTypes.string\n};\n\nexport default Board;\n",["32","33"],"/Users/kgossaye/ada/inspiration-board/src/components/Card.js",["34"],"import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport emoji from 'emoji-dictionary';\n\nimport './Card.css';\n\nconst Card = (props) => {\n  return (\n    <div className=\"card\">\n      <div className='card__content'>\n        <p className='card__content-text'>{props.card.text}</p>\n        <p className='card__content-emoji'>{props.card.emoji ? emoji.getUnicode(props.card.emoji) : ''}</p>\n      </div>\n      <button \n        onClick={() => props.deleteCallback(props.card.id)}\n        className='card__delete'> Delete Card </button>\n    </div>\n  )\n}\n\nCard.propTypes = {\n  card: PropTypes.objectOf(PropTypes.shape(\n    {\n      id: PropTypes.number,\n      text: PropTypes.string,\n      emoji: PropTypes.string,\n    }\n  )),\n\n  deleteCallback: PropTypes.func.isRequired\n};\n\nexport default Card;\n","/Users/kgossaye/ada/inspiration-board/src/components/NewCardForm.js",["35","36"],{"ruleId":"37","severity":1,"message":"38","line":2,"column":8,"nodeType":"39","messageId":"40","endLine":2,"endColumn":17},{"ruleId":"37","severity":1,"message":"41","line":12,"column":10,"nodeType":"39","messageId":"40","endLine":12,"endColumn":22},{"ruleId":"42","severity":1,"message":"43","line":24,"column":6,"nodeType":"44","endLine":24,"endColumn":8,"suggestions":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"37","severity":1,"message":"50","line":1,"column":17,"nodeType":"39","messageId":"40","endLine":1,"endColumn":26},{"ruleId":"37","severity":1,"message":"50","line":1,"column":17,"nodeType":"39","messageId":"40","endLine":1,"endColumn":26},{"ruleId":"37","severity":1,"message":"38","line":2,"column":8,"nodeType":"39","messageId":"40","endLine":2,"endColumn":17},"no-unused-vars","'PropTypes' is defined but never used.","Identifier","unusedVar","'errorMessage' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.url'. Either include it or remove the dependency array.","ArrayExpression",["51"],"no-native-reassign",["52"],"no-negated-in-lhs",["53"],"'Component' is defined but never used.",{"desc":"54","fix":"55"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [props.url]",{"range":"56","text":"57"},[617,619],"[props.url]"]